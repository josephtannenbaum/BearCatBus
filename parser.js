// Generated by CoffeeScript 1.7.1
var aliases, dayrange_parsed, occt, ones_parsed, ones_sortfunc, parsed, stop, stop_parsed, stops, _fn, _i, _len, _ref,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

aliases = [];

stops = [];

occt = "#WS Westside\n#LRS Leroy Southside\n#OAK Oakdale Mall\n#RRT Riviera Ridge\n#RES Residential Shuttle\n#DCR Downtown Center\n#ITC ITC Shuttle\n#UP University Plaza\n#TC Triple Cities\n;University Union\n	*M-F\n		`WS\n			7-13 0:30\n			13:20-24 0:20\n		`LRS\n			8:20-16:20 2:0\n			18-24 1:0\n		`OAK\n			15-22 1:0\n		`RRT\n			15:30-22:30 1:0\n		`RES\n			7:15-23:45 0:30\n		`DCR\n			7:15-23:45 0:30\n	*M-R\n		`OAK\n			23\n		`RES\n			24:15\n	*F\n		`DCR\n			24:15\n;Mohawk/Dickinson\n	*M-F\n		`TC\n			7:15-12:45 0:30\n		`UP\n			7-21:30 0:30\n		`ITC\n			7:20-22:00 0:20\n	*M-R\n		`UP\n			24\n			24:30";

window.strip = function(x) {
  return /^\s*(.*?)\s*$/.exec(x)[1];
};

window.tail = function(x) {
  return x.slice(1);
};

window.split = function(x) {
  return x.split(' ');
};

window.join = function(x) {
  return x.join(' ');
};

window.mtry_to_hour = function(x) {
  var h, m;
  if (!(__indexOf.call(x, ':') >= 0)) {
    return parseInt(x) * 60;
  } else {
    h = parseInt(x.split(':')[0]);
    m = parseInt(x.split(':')[1]);
    return h * 60 + m;
  }
};

window.hour_to_mtry = function(x) {
  var div, rem;
  div = Math.floor(x / 60) % 24;
  rem = x % 60;
  if (rem < 10) {
    return div + ':0' + rem;
  } else {
    return div + ':' + rem;
  }
};

stop_parsed = function(ln) {
  return {
    lbl: tail(ln),
    ones: []
  };
};

ones_parsed = function(ln, bus_alias, day_range) {
  var hour_range, time_range, time_start, time_step, time_stop, x;
  hour_range = (split(ln))[0];
  time_step = __indexOf.call(hour_range, '-') >= 0 ? (split(ln))[1] : null;
  if (time_step) {
    time_start = mtry_to_hour(hour_range.split('-')[0]);
    time_stop = mtry_to_hour(hour_range.split('-')[1]);
    time_range = (function() {
      var _i, _ref, _results;
      _results = [];
      for (x = _i = time_start, _ref = mtry_to_hour(time_step); _ref > 0 ? _i <= time_stop : _i >= time_stop; x = _i += _ref) {
        _results.push(x);
      }
      return _results;
    })();
  } else {
    time_range = [mtry_to_hour(hour_range)];
  }
  return (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = time_range.length; _i < _len; _i++) {
      x = time_range[_i];
      _results.push({
        t: x,
        bus: bus_alias,
        day_range: day_range
      });
    }
    return _results;
  })();
};

dayrange_parsed = function(s) {
  var a, b, days, _i, _ref, _results;
  days = ['M', 'T', 'W', 'R', 'F', 'S', 'U'];
  _ref = s.split('-'), a = _ref[0], b = _ref[1];
  a = days.indexOf(a);
  b = days.indexOf(b);
  if (b >= 0) {
    return (function() {
      _results = [];
      for (var _i = a; a <= b ? _i <= b : _i >= b; a <= b ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
  } else {
    return [a];
  }
};

parsed = function(s, aliases, stops) {
  var a, cbus, cdayrange, cstop, ln, _fn, _i, _len, _ref;
  cstop = null;
  cbus = '';
  cdayrange = '';
  aliases = {};
  _ref = (function() {
    var _j, _len, _ref, _results;
    _ref = s.split('\n');
    _results = [];
    for (_j = 0, _len = _ref.length; _j < _len; _j++) {
      a = _ref[_j];
      _results.push(strip(a));
    }
    return _results;
  })();
  _fn = function(ln) {
    switch (ln[0]) {
      case '#':
        return aliases[split(tail(ln))] = join(tail(split(tail(ln))));
      case ';':
        cstop = stop_parsed(ln);
        return stops.push(cstop);
      case '*':
        return cdayrange = dayrange_parsed(tail(ln));
      case '`':
        return cbus = tail(ln);
      default:
        return cstop.ones = cstop.ones.concat(ones_parsed(ln, cbus, cdayrange));
    }
  };
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    ln = _ref[_i];
    _fn(ln);
  }
  return stops;
};

window.stops = parsed(occt, aliases, stops);

window.ones = [];

_ref = window.stops;
_fn = function(stop) {
  var one, _j, _len1, _ref1, _results;
  _ref1 = stop.ones;
  _results = [];
  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
    one = _ref1[_j];
    _results.push((function(one) {
      return window.ones.push({
        id: one.bus,
        name: stop.lbl,
        day_range: one.day_range,
        h_depart_time: one.t,
        depart_time: moment(hour_to_mtry(one.t), "HH:mm").format("h:mma")
      });
    })(one));
  }
  return _results;
};
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  stop = _ref[_i];
  _fn(stop);
}

ones_sortfunc = function(a, b) {
  return a.h_depart_time - b.h_depart_time;
};

window.ones.sort(ones_sortfunc);

window.filter_by_location = function(ones, loc) {
  var one, _j, _len1, _results;
  if (loc) {
    _results = [];
    for (_j = 0, _len1 = ones.length; _j < _len1; _j++) {
      one = ones[_j];
      if (one.name.toLowerCase().indexOf(loc.toLowerCase()) !== -1) {
        _results.push(one);
      }
    }
    return _results;
  } else {
    return ones;
  }
};

window.filter_by_time = function(ones, t, d) {
  var one, _j, _len1, _results;
  _results = [];
  for (_j = 0, _len1 = ones.length; _j < _len1; _j++) {
    one = ones[_j];
    if ((one.h_depart_time >= t) && (__indexOf.call(one.day_range, d) >= 0)) {
      _results.push(one);
    }
  }
  return _results;
};
